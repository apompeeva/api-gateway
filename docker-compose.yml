version: "3.8"

services:
    zookeeper:
        image: bitnami/zookeeper:latest
        ports:
            - 2181:2181
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes

    kafka:
        image: bitnami/kafka:latest
        ports:
            - 9092:9092
            - 9093:9093
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
            - KAFKA_CFG_LISTENERS=CLIENT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
        depends_on:
            - zookeeper
    postgres:
        image: postgres:16
        container_name: postgres
        command: -p 1221
        expose:
            - 1221
        environment:
            POSTGRES_HOST_AUTH_METHOD: trust
        env_file:
            - .env
        volumes:
            - pgdata:/var/lib/postgresql/data

    auth:
        env_file:
          - .env
        build:
            context: ./auth-service
            dockerfile: Dockerfile
        depends_on:
            - kafka
            - zookeeper
            - postgres
        command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8001"
        ports:
            - 8001:8001
        environment:
            - KAFKA_HOST=kafka
            - KAFKA_PORT=9092
            - TOPIC=verification
        volumes:
          - shared_images:/images


    transaction:
        env_file:
          - .env
        build:
            context: ./transaction-service
            dockerfile: Dockerfile
        ports:
            - 8002:8002
        depends_on:
            - postgres
            - auth
        command: sh -c "python wait_for_auth.py && alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8002"

    face_verification:
        env_file:
          - .env
        build:
            context: ./face-verification-service
            dockerfile: Dockerfile
        depends_on:
            - kafka
            - zookeeper
            - postgres
            - auth
        command: sh -c "python wait_for_auth.py && alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000"
        ports:
            - 8000:8000
        environment:
            - KAFKA_HOST=kafka
            - KAFKA_PORT=9092
            - TOPIC=verification
        volumes:
          - shared_images:/images


    gateway:
        build:
            context: ./
            dockerfile: Dockerfile
        ports:
            - 8080:8003
        depends_on:
            - auth
            - transaction
            - face_verification

volumes:
    shared_images:
    pgdata:




